Link: 			http://staging.techbrain.ai/ruby/setup-chatapp/initial-setup
Currently: 		Here, we will not testing the app so skipping and using postgresql as database.
Suggested:		Here, we will not be testing the app so skipping and using postgresql as database.




Link: 			http://staging.techbrain.ai/ruby/setup-actioncable/conversation-channel-backend
Currently: 		
	Using the subscribed method adds us to a channel. While you're subscribed to the channel, only a code performed in this certain channel will be sent to all users, that which are connected in the channel. Only you get notifications, when you subscribed to a channel.

Suggested:
	The subscribed method adds us to a channel. While you're subscribed to the channel, the code performed in the particular channel will be applicable to the subscribed users. You get notifications only from the channels you are subscribed to.




Link: 			http://staging.techbrain.ai/ruby/actioncable-best-practices/unread-message-notification
Currently: 		To receive data we need receive method is backend i.e.
Needs to be:	To receive data we need receive method in backend i.e.



Link: 			http://staging.techbrain.ai/ruby/setup-chatapp/setting-up-bootstrap
Currently: 		Self-directed lesson: Setup user model
Needs to be:	Self-directed lesson: Setup bootstrap


Link: 			http://staging.techbrain.ai/ruby/actioncable-best-practices/introducing-active-job
Currently: 		It's completely independant.
Needs to be:	It's completely independent.